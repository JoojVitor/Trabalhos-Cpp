#ifndef TORRES_H
#define TORRES_H

class stackVector{
private:
    int V[6];
    int N;
    int TOP;
public:
    stackVector(int N);
    bool Push(int O);
    bool Pop(int *AUX);
    bool IsEmpty();
    bool IsFull();
};

#endif // TORRES_H
--------------------------------------------------------------------------------------------------------
#include "torres.h"

stackVector::stackVector(int N){
    TOP = 0;
    this->N = N;
}

bool stackVector::Push(int O){
    if(TOP==N){
        return false;
    }
    V[TOP] = O;
    TOP++;
    return true;
}

bool stackVector::Pop(int *AUX){
    if(!TOP){
        return false;
    }
    TOP--;
    *AUX = V[TOP];
    return true;
}

bool stackVector::IsEmpty(){
    return !TOP;
}

bool stackVector::IsFull(){
    return TOP==N;
}
-------------------------------------------------------------------------------------------------------
